{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.177.2456",
      "templateHash": "15196596123484391426"
    }
  },
  "parameters": {
    "customTableName": {
      "type": "string",
      "defaultValue": "SyslogCEFCustomUsage",
      "metadata": {
        "description": "The name of the custom table to be created in the Log Analytics workspace (without _CL)."
      }
    },
    "workspaceName": {
      "type": "string",
      "defaultValue": "wks",
      "metadata": {
        "description": "The name of the log analytics workspace where the custom table will be created."
      }
    },
    "dataCollectionRule": {
      "type": "string",
      "defaultValue": "DCR-CustomUsage",
      "metadata": {
        "description": "The name of the data collection rule (DCR)."
      }
    },
    "logicAppName": {
      "type": "string",
      "defaultValue": "CustomUsage",
      "metadata": {
        "description": "The name of the logic app creating the usage statistics."
      }
    }
  },
  "variables": {
    "workspaceResourceId": "[format('/subscriptions/{0}/resourcegroups/{1}/providers/Microsoft.OperationalInsights/workspaces/{2}', subscription().subscriptionId, resourceGroup().name, parameters('workspaceName'))]",
    "webConnectionName": "SyslogCEFCustomUsage-Connection"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/tables",
      "apiVersion": "2023-09-01",
      "name": "[format('{0}/{1}_CL', parameters('workspaceName'), parameters('customTableName'))]",
      "properties": {
        "plan": "Analytics",
        "schema": {
          "name": "[format('{0}_CL', parameters('customTableName'))]",
          "columns": [
            {
              "name": "TimeGenerated",
              "type": "DateTime"
            },
            {
              "name": "StartTime",
              "type": "DateTime"
            },
            {
              "name": "EndTime",
              "type": "DateTime"
            },
            {
              "name": "DeviceVendor",
              "type": "String"
            },
            {
              "name": "DeviceProduct",
              "type": "String"
            },
            {
              "name": "Computer",
              "type": "String"
            },
            {
              "name": "CollectorHostName",
              "type": "String"
            },
            {
              "name": "Table",
              "type": "String"
            },
            {
              "name": "EPS",
              "type": "Real"
            },
            {
              "name": "Quantity",
              "type": "Real"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Insights/dataCollectionRules",
      "apiVersion": "2023-03-11",
      "name": "[parameters('dataCollectionRule')]",
      "kind": "Direct",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "streamDeclarations": {
          "[format('Custom-{0}_CL', parameters('customTableName'))]": {
            "columns": [
              {
                "name": "TimeGenerated",
                "type": "datetime"
              },
              {
                "name": "StartTime",
                "type": "datetime"
              },
              {
                "name": "EndTime",
                "type": "datetime"
              },
              {
                "name": "DeviceVendor",
                "type": "string"
              },
              {
                "name": "DeviceProduct",
                "type": "string"
              },
              {
                "name": "Computer",
                "type": "string"
              },
              {
                "name": "CollectorHostName",
                "type": "string"
              },
              {
                "name": "Table",
                "type": "string"
              },
              {
                "name": "Quantity",
                "type": "real"
              },
              {
                "name": "EPS",
                "type": "real"
              }
            ]
          }
        },
        "dataSources": {},
        "destinations": {
          "logAnalytics": [
            {
              "workspaceResourceId": "[variables('workspaceResourceId')]",
              "name": "TargetWorkspace"
            }
          ]
        },
        "dataFlows": [
          {
            "streams": [
              "[format('Custom-{0}_CL', parameters('customTableName'))]"
            ],
            "destinations": [
              "TargetWorkspace"
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('webConnectionName')]",
      "location": "[resourceGroup().location]",
      "kind": "V1",
      "properties": {
        "displayName": "[variables('webConnectionName')]",
        "customParameterValues": {},
        "parameterValueSet": {
          "name": "managedIdentityAuth"
        },
        "api": {
          "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/azuremonitorlogs', subscription().subscriptionId, resourceGroup().location)]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('logicAppName')]",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "Data Collection Endpoint URI": {
              "defaultValue": "[reference(resourceId('Microsoft.Insights/dataCollectionRules', parameters('dataCollectionRule')), '2023-03-11').endpoints.logsIngestion]",
              "type": "String"
            },
            "DCR Immutable ID": {
              "defaultValue": "[reference(resourceId('Microsoft.Insights/dataCollectionRules', parameters('dataCollectionRule')), '2023-03-11').immutableId]",
              "type": "String"
            },
            "Stream Name": {
              "defaultValue": "[format('Custom-{0}_CL', parameters('customTableName'))]",
              "type": "String"
            },
            "Subcription ID": {
              "defaultValue": "[subscription().subscriptionId]",
              "type": "String"
            },
            "Resource Group Name": {
              "defaultValue": "[resourceGroup().name]",
              "type": "String"
            },
            "Workspace Name": {
              "defaultValue": "[parameters('workspaceName')]",
              "type": "String"
            },
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "Every_hour": {
              "recurrence": {
                "interval": 1,
                "frequency": "Hour"
              },
              "evaluatedRecurrence": {
                "interval": 1,
                "frequency": "Hour"
              },
              "type": "Recurrence"
            }
          },
          "actions": {
            "Get_the_starting_time": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                  }
                },
                "method": "post",
                "body": {
                  "query": "[format('union isfuzzy=true\n    (print LastTime = now() - 1h) ,\n    ({0}_CL\n    | summarize LastTime = max(TimeGenerated))\n | summarize LastTime = max(LastTime)', parameters('customTableName'))]",
                  "timerangetype": "2",
                  "timerange": {
                    "relativeTimeRange": "Last 48 hours"
                  }
                },
                "path": "/queryDataV2",
                "queries": {
                  "subscriptions": "@parameters('Subcription ID')",
                  "resourcegroups": "@parameters('Resource Group Name')",
                  "resourcetype": "Log Analytics Workspace",
                  "resourcename": "@parameters('Workspace Name')"
                }
              }
            },
            "Upload_usage": {
              "runAfter": {
                "Get_the_usage": [
                  "Succeeded"
                ]
              },
              "type": "Http",
              "inputs": {
                "uri": "@{parameters('Data Collection Endpoint URI')}/dataCollectionRules/@{parameters('DCR Immutable ID')}/streams/@{parameters('Stream Name')}?api-version=2023-01-01",
                "method": "POST",
                "headers": {
                  "Content-Type": "application/json"
                },
                "body": "@body('Get_the_usage')?['value']",
                "authentication": {
                  "type": "ManagedServiceIdentity",
                  "audience": "https://monitor.azure.com"
                }
              },
              "runtimeConfiguration": {
                "contentTransfer": {
                  "transferMode": "Chunked"
                }
              }
            },
            "Get_the_usage": {
              "runAfter": {
                "Get_the_starting_time": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                  }
                },
                "method": "post",
                "body": {
                  "query": "let TimeReference = datetime(@{body('Get_the_starting_time')?['value']?[0]['LastTime']}) ;\nlet EndTimeReference = now();\n union isfuzzy=true (CommonSecurityLog \n| where TimeGenerated between (TimeReference .. EndTimeReference) \n| summarize Quantity = sum(_BilledSize / 1024 / 1024), EventCount = count() by DeviceVendor, DeviceProduct, Computer, CollectorHostName, Table=Type \n| extend TimeGenerated = now(), StartTime = TimeReference, EndTime = EndTimeReference, EPS = toreal(EventCount)/60/60), \n(Syslog \n| where TimeGenerated between (TimeReference .. EndTimeReference) \n| summarize Quantity = sum(_BilledSize / 1024 / 1024), EventCount = count() by Computer, CollectorHostName, Table=Type \n| extend TimeGenerated = now(), StartTime = TimeReference, EndTime = EndTimeReference, EPS = toreal(EventCount)/60/60)",
                  "timerangetype": "2",
                  "timerange": {
                    "relativeTimeRange": "Last 7 days"
                  }
                },
                "path": "/queryDataV2",
                "queries": {
                  "subscriptions": "@parameters('Subcription ID')",
                  "resourcegroups": "@parameters('Resource Group Name')",
                  "resourcetype": "Log Analytics Workspace",
                  "resourcename": "@parameters('Workspace Name')"
                }
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuremonitorlogs": {
                "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/eastus/managedApis/azuremonitorlogs', subscription().subscriptionId)]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('webConnectionName'))]",
                "connectionName": "[variables('webConnectionName')]",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity"
                  }
                }
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('dataCollectionRule'))]",
        "[resourceId('Microsoft.Web/connections', variables('webConnectionName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Insights/dataCollectionRules/{0}', parameters('dataCollectionRule'))]",
      "name": "[guid(resourceId('Microsoft.Insights/dataCollectionRules', parameters('dataCollectionRule')), 'Monitoring Metrics Publisher')]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.Logic/workflows', parameters('logicAppName')), '2017-07-01', 'full').identity.principalId]",
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('dataCollectionRule'))]",
        "[resourceId('Microsoft.Logic/workflows', parameters('logicAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.OperationalInsights/workspaces/{0}', parameters('workspaceName'))]",
      "name": "[guid(resourceId('Microsoft.Insights/dataCollectionRules', parameters('dataCollectionRule')), 'Log Analytics Reader')]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.Logic/workflows', parameters('logicAppName')), '2017-07-01', 'full').identity.principalId]",
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '73c42c96-874c-492b-b04d-ab87d138a893')]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('dataCollectionRule'))]",
        "[resourceId('Microsoft.Logic/workflows', parameters('logicAppName'))]"
      ]
    }
  ]
}